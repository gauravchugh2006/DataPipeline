[core]
# The folder where your airflow DAGs are located
dags_folder = /usr/local/airflow/dags

# The folder where airflow should store its log files
base_log_folder = /usr/local/airflow/logs

# The executor class that airflow should use
executor = LocalExecutor

# The SqlAlchemy connection string to the metadata database
# sql_alchemy_conn = postgresql+psycopg2://airflow:airflow@postgres/airflow

# Whether to load the DAG examples that ship with Airflow
load_examples = False

# The time zone used by the scheduler
default_timezone = utc

# Generate a Fernet key using:
# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
fernet_key = ehE_UybKeIGETmag57Fy1MBeAIQRWDt7NS9zcl017Yg=

[database]
sql_alchemy_conn = postgresql+psycopg2://airflow:airflow@postgres/airflow
# Enable pooling for database connections
sql_alchemy_pool_enabled = True
sql_alchemy_pool_size = 5
sql_alchemy_pool_recycle = 1800
sql_alchemy_pool_pre_ping = True

[logging]
# Logging directory for task execution logs
base_log_folder = /usr/local/airflow/logs

# Log level settings
logging_level = ERROR

# Updated log format with escaped % signs for proper literal output
log_format = [%%(asctime)s] {%%(filename)s:%%(lineno)d} %%(levelname)s - %%(message)s

[smtp]
# Email settings for Airflow notifications
smtp_host = smtp.gmail.com
smtp_starttls = True
smtp_ssl = False
smtp_port = 587
smtp_mail_from = jaiganesh086@gmail.com

[webserver]
# The base URL of the website
base_url = http://localhost:8082

# The port on which to run the web server
web_server_port = 8082

# Secret key used for the web UI (keep it secure)
secret_key = your_secret_key_here

# Number of workers to run the Gunicorn web server
workers = 4

[scheduler]
# How often the scheduler should run (in seconds)
scheduler_heartbeat_sec = 5

# The number of task instances allowed to run concurrently
max_threads = 2

[celery]
# Redis broker URL for CeleryExecutor (if used)
broker_url = redis://redis:6379/0

# Celery result backend using PostgreSQL
result_backend = db+postgresql://airflow:airflow@postgres/airflow